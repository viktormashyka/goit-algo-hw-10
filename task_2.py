# Завдання 2. Обчислення визначеного інтеграла

# Ваше друге завдання полягає в обчисленні значення інтеграла функції методом Монте-Карло.



# Програмно реалізовано алгоритм пошуку визначеного інтеграла за допомогою методу Монте-Карло. Код виконується 
# та повертає значення інтеграла.

# Виконано порівняльний аналіз результату, отриманого за допомогою алгоритму, з результатом, отриманим аналітично 
# або за допомогою функції quad з підмодуля integrate бібліотеки SciPy.

# Зроблено висновки щодо правильності розрахунків шляхом порівняння отриманих результатів і результатів, які дає функція 
# quad або аналітичне обчислення інтеграла. Висновки оформлено у вигляді файлу readme.md домашнього завдання.

import matplotlib.pyplot as plt
import numpy as np

# Визначення функції та межі інтегрування
def f(x):
    return x ** 2

a = 0  # Нижня межа
b = 2  # Верхня межа

# Створення діапазону значень для x
x = np.linspace(-0.5, 2.5, 400)
y = f(x)

# Створення графіка
fig, ax = plt.subplots()

# Малювання функції
ax.plot(x, y, 'r', linewidth=2)

# Заповнення області під кривою
ix = np.linspace(a, b)
iy = f(ix)
ax.fill_between(ix, iy, color='gray', alpha=0.3)

# Налаштування графіка
ax.set_xlim([x[0], x[-1]])
ax.set_ylim([0, max(y) + 0.1])
ax.set_xlabel('x')
ax.set_ylabel('f(x)')

# Додавання меж інтегрування та назви графіка
ax.axvline(x=a, color='gray', linestyle='--')
ax.axvline(x=b, color='gray', linestyle='--')
ax.set_title('Графік інтегрування f(x) = x^2 від ' + str(a) + ' до ' + str(b))
plt.grid()
plt.show()

# Для перевірки обчислення визначеного інтеграла в Python ви можете використовувати бібліотеку SciPy, 
# зокрема її функцію quad з підмодуля integrate. Спочатку необхідно визначити функцію, яку ви хочете інтегрувати, 
# а потім використати quad для обчислення інтеграла на заданому інтервалі.

import scipy.integrate as spi

# Визначте функцію, яку потрібно інтегрувати, наприклад, f(x) = x^2
def f(x):
    return x**2

# Визначте межі інтегрування, наприклад, від 0 до 1
a = 0  # нижня межа
b = 2  # верхня межа

# Обчислення інтеграла
result, error = spi.quad(f, a, b)

print("Інтеграл: ", result, error) # Інтеграл:  2.666666666666667 2.960594732333751e-14



#1. Обчисліть значення інтеграла функції за допомогою методу Монте-Карло, інакше кажучи, знайдіть площу під цим графіком (сіра зона).

# 2. Перевірте правильність розрахунків, щоб підтвердити точність методу Монте-Карло, шляхом порівняння отриманого результату 
# та аналітичних розрахунків або результату виконання функції quad. Зробіть висновки.

# Рішення Завдання 1. Обчислення інтеграла методом Монте-Карло
import numpy as np

# Визначення функції
def f(x):
    return x ** 2

# Межі інтегрування
a = 0
b = 2
N = 10000  # кількість випадкових точок

# Генерація випадкових точок
x_random = np.random.uniform(a, b, N)
y_random = np.random.uniform(0, f(b), N)

# Підрахунок кількості точок, що знаходяться під графіком
under_curve = y_random < f(x_random)
integral_monte_carlo = (b - a) * f(b) * np.sum(under_curve) / N

print(f"Значення інтеграла методом Монте-Карло: {integral_monte_carlo}")

# Рішення Завдання 2. Обчислення інтеграла за допомогою quad (SciPy)
import scipy.integrate as spi

# Визначаємо функцію для інтегрування
def f(x):
    return x**2

# Обчислюємо інтеграл на інтервалі [0, 2]
a = 0
b = 2
result, error = spi.quad(f, a, b)

print(f"Значення інтеграла за допомогою quad: {result}, похибка: {error}")



